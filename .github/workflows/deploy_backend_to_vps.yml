name: Deploy Backend to VPS

on:
  push:
    branches: [main]

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for backend changes
        uses: dorny/paths-filter@v2
        id: check_changes
        with:
          filters: |
            backend:
              - 'backend/**'

      - name: Setup Node.js
        if: steps.check_changes.outputs.backend == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Build backend project
        if: steps.check_changes.outputs.backend == 'true'
        working-directory: backend
        run: |
          npm ci
          npm run build

      - name: Create deployment package
        if: steps.check_changes.outputs.backend == 'true'
        run: |
          mkdir -p ${{ secrets.PROJECT_NAME }}
          cp -r backend/dist ${{ secrets.PROJECT_NAME }}
          cp backend/package*.json ${{ secrets.PROJECT_NAME }}/

      - name: Create .env file
        if: steps.check_changes.outputs.backend == 'true'
        run: |
          echo '${{ secrets.ENV_VARIABLES }}' > ${{ secrets.PROJECT_NAME }}/.env

      - name: Cleanup server before deployment
        if: steps.check_changes.outputs.backend == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pm2 stop ${{ secrets.PROCESS_NAME }} || true
            pm2 delete ${{ secrets.PROCESS_NAME }} || true
            rm -rf /home/ubuntu/${{ secrets.SERVER_USER }}/${{ secrets.PROJECT_NAME }}
            mkdir -p /home/ubuntu/${{ secrets.SERVER_USER }}

      - name: Deploy files to server
        if: steps.check_changes.outputs.backend == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ secrets.PROJECT_NAME }}"
          target: "/home/ubuntu/${{ secrets.SERVER_USER }}/"
          strip_components: 1

      - name: Start application
        if: steps.check_changes.outputs.backend == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/${{ secrets.SERVER_USER }}/${{ secrets.PROJECT_NAME }}
            npm install --force
            npm run start:prod
            pm2 save

      - name: Skip deployment notification
        if: steps.check_changes.outputs.backend == 'false'
        run: echo "No backend changes detected. Skipping deployment."
